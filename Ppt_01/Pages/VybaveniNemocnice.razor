
@page "/vybaveninemocnice"

<PageTitle>VybaveniNemocnice</PageTitle>

<h1>Vybavení Nemocnice</h1>
<style>
    .colorNeedsRevision {
        background-color: #dc143c;        
    }

    .colorDontNeedsRevision{
        background-color: #fff8dc; 
    }
</style>

@if (vybaveni.Count == 0)
{
    <p><em>Načítání dat</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nazev</th>
                <th>Datum nákupu</th>
                <th>Datum poslední revize</th>
                <th>Potřebuje revizi?</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prvek in vybaveni)
            {            
                @if (@prvek.NeedsRevision == true)
                {
                <tr class = "colorNeedsRevision">
                    <td>@prvek.name</td>
                    <td>@prvek.BoughtData.ToShortDateString()</td>
                    <td>@prvek.LastRevisionDate.ToShortDateString()</td>

                    @if (@prvek.NeedsRevision == true)
                    {
                        <td> ANO</td>                       
                       
                    } else {
                        <td>NE</td>
                        
                    }  
                   

                    <td><button class="btn btn-danger" @onclick = "@(() => vybaveni.RemoveAt(vybaveni.IndexOf(prvek)))">Smazat</button></td>                      
                    <td><button class="btn btn-warning" @onclick="@(() => revision(vybaveni.IndexOf(prvek)))">Provést revizi</button></td>
                    </tr>
                }
                else
                {
                    <tr class = "colorDontNeedsRevision">
                    <td>@prvek.name</td>
                    <td>@prvek.BoughtData.ToShortDateString()</td>
                    <td>@prvek.LastRevisionDate.ToShortDateString()</td>

                    @if (@prvek.NeedsRevision == true)
                    {
                        <td> ANO</td>                       
                       
                    } else {
                        <td>NE</td>
                        
                    }  
                   

                    <td><button class="btn btn-danger" @onclick = "@(() => vybaveni.RemoveAt(vybaveni.IndexOf(prvek)))">Smazat</button></td>                      
                    <td><button class="btn btn-warning" @onclick="@(() => revision(vybaveni.IndexOf(prvek)))">Provést revizi</button></td>
                    </tr> 
                  }


            }
                
        </tbody>
    </table>
}   



@code {       
    public List<VybaveniModel> vybaveni = new List<VybaveniModel>();    

    protected override async Task OnInitializedAsync() {
        seznam();
    }    



    public void seznam() { 

        for (int i = 0; i < 10; i++)
        {
            DateTime datetoday = DateTime.Now;
            VybaveniModel vyb = new VybaveniModel(createName(), createDate(1995, 2020), createDate(2015,datetoday.Year), false);


            datetoday = datetoday.AddDays(-730);
            if (vyb.LastRevisionDate < datetoday)
            {
                vyb.NeedsRevision = true;               
            }

            vybaveni.Add(vyb);
        }  
    }

    public string createName()
    {
        var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        var stringChars = new char[8];
        var random = new Random();

        for (int j = 0; j < stringChars.Length; j++)
        {
            stringChars[j] = chars[random.Next(chars.Length)];
        }

        var finalString = new String(stringChars);

        return finalString;
    }

    public DateTime createDate(int minYear, int maxYear)
    {
        Random rnd = new Random();        

        int rndYear = rnd.Next(minYear, maxYear);
        int rndMonth = rnd.Next(1, 12);
        int rndDay = rnd.Next(1, 31);

        DateTime generateDate = new DateTime(rndYear, rndMonth, rndDay);

        return generateDate;
    }

    public bool controlRevision()
    {
        return true;
    }    

    public void revision(int prvekCislo)
    {
        DateTime datetoday = DateTime.Now;
        vybaveni[prvekCislo].LastRevisionDate = datetoday;
        vybaveni[prvekCislo].NeedsRevision = false;        
    }
 }   

    




