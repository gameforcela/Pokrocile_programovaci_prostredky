@page "/vybaveninemocnice"

<PageTitle>VybaveniNemocnice</PageTitle>

<h1>Vybavení Nemocnice</h1>

@if (vybaveni.Count == 0)
{
    <p><em>Načítání dat</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nazev</th>
                <th>Datum nákupu</th>
                <th>Datum poslední revize</th>
                <th>Potřebuje revizi?</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var prvek in vybaveni)
            {
                <VybaveniRow Prvek=prvek DeleteItemCallback="() => vybaveni.Remove(prvek)" RevisionItemCallback="() => prvek.LastRevisionDate = DateTime.Now" />
            }

        </tbody>
    </table>
}



@code {
    public List<VybaveniModel> vybaveni = new List<VybaveniModel>();

    protected override async Task OnInitializedAsync()
    {
        seznam();
    }



    public void seznam()
    {

        for (int i = 0; i < 10; i++)
        {
            DateTime datetoday = DateTime.Now;
            VybaveniModel vyb = new VybaveniModel(createName(), createDate(1995, 2020), createDate(2015, datetoday.Year));

            vybaveni.Add(vyb);
        }
    }

    public string createName()
    {
        var chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        var stringChars = new char[8];
        var random = new Random();

        for (int j = 0; j < stringChars.Length; j++)
        {
            stringChars[j] = chars[random.Next(chars.Length)];
        }

        var finalString = new String(stringChars);

        return finalString;
    }

    public DateTime createDate(int minYear, int maxYear)
    {
        Random rnd = new Random();

        int rndYear = rnd.Next(minYear, maxYear);
        int rndMonth = rnd.Next(1, 12);
        int rndDay = rnd.Next(1, 31);

        DateTime generateDate = new DateTime(rndYear, rndMonth, rndDay);

        return generateDate;
    }
   
 }






